[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\GAUTAM~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\GAUTAM~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_271)
[debug]       Load.loadUnit: plugins took 65.7213ms
[debug]       Load.loadUnit: defsScala took 0.2408ms
[debug] [Loading] Scanning directory C:\Users\Gautam Jain\.sbt\1.0\plugins
[debug]         Load.loadUnit: mkEval took 5.4959ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Gautam Jain\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.3061 ms
[info] loading settings for project global-plugins from idea.sbt ...
[debug]           Load.resolveProject(global-plugins) took 37.3217ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Gautam Jain\.sbt\1.0\plugins, plugins: List(<none>))) took 73.4328ms
[debug] [Loading] Done in C:\Users\Gautam Jain\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 150.5204ms
[debug]       Load.loadUnit: cleanEvalClasses took 5.442ms
[debug]     Load.loadUnit(file:/C:/Users/Gautam%20Jain/.sbt/1.0/plugins/, ...) took 227.3806ms
[debug]   Load.apply: load took 345.6233ms
[debug]   Load.apply: resolveProjects took 3.8529ms
[debug]   Load.apply: finalTransforms took 40.6072ms
[debug]   Load.apply: config.delegates took 5.6597ms
[debug]   Load.apply: Def.make(settings)... took 564.6361ms
[debug]   Load.apply: structureIndex took 74.1212ms
[debug]   Load.apply: mkStreams took 1.2386ms
[info] loading global plugins from C:\Users\Gautam Jain\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2374.7656ms
[debug]           Load.loadUnit: plugins took 21.575ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory F:\LearningPath\ScalaPrograms\project
[debug]             Load.loadUnit: mkEval took 101.1437ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\LearningPath\ScalaPrograms\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7755 ms
[info] loading settings for project scalaprograms-build from idea.sbt ...
[debug]               Load.resolveProject(scalaprograms-build) took 1.4997ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaprograms-build, base: F:\LearningPath\ScalaPrograms\project, plugins: List(<none>))) took 3.7835ms
[debug] [Loading] Done in F:\LearningPath\ScalaPrograms\project, returning: (scalaprograms-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 172.094ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.749ms
[debug]         Load.loadUnit(file:/F:/LearningPath/ScalaPrograms/project/, ...) took 195.0805ms
[debug]       Load.apply: load took 195.9433ms
[debug]       Load.apply: resolveProjects took 0.0864ms
[debug]       Load.apply: finalTransforms took 7.2405ms
[debug]       Load.apply: config.delegates took 0.3586ms
[debug]       Load.apply: Def.make(settings)... took 48.8416ms
[debug]       Load.apply: structureIndex took 18.9576ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from F:\LearningPath\ScalaPrograms\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1147.3046ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory F:\LearningPath\ScalaPrograms
[debug]       Load.loadUnit: mkEval took 0.3099ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\LearningPath\ScalaPrograms, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5305 ms
[info] loading settings for project scalaprograms from build.sbt ...
[debug]         Load.resolveProject(scalaprograms) took 37.3719ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalaprograms, base: F:\LearningPath\ScalaPrograms, plugins: List(<none>))) took 39.7656ms
[debug] [Loading] Done in F:\LearningPath\ScalaPrograms, returning: (scalaprograms)
[debug]     Load.loadUnit: loadedProjectsRaw took 1655.1454ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.3847ms
[debug]   Load.loadUnit(file:/F:/LearningPath/ScalaPrograms/, ...) took 2809.2889ms
[debug] Load.apply: load took 2810.5226ms
[debug] Load.apply: resolveProjects took 0.0705ms
[debug] Load.apply: finalTransforms took 86.1557ms
[debug] Load.apply: config.delegates took 1.0151ms
[debug] Load.apply: Def.make(settings)... took 71.8163ms
[debug] Load.apply: structureIndex took 13.4003ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to ScalaPrograms (in build file:/F:/LearningPath/ScalaPrograms/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62204 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62204, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaPrograms (in build file:/F:/LearningPath/ScalaPrograms/)
[debug] > Exec(idea-shell, None, None)
